apply plugin: 'com.android.application'

android {
    compileSdkVersion 28



    defaultConfig {
        applicationId "com.example.app_autoregister"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependencies.appcompat_v7
    implementation rootProject.ext.dependencies.constraint_layout

    implementation project(':app_autoregister:lib_interface')
    implementation project(':app_autoregister:model_a')


}

//功能介绍：
//在编译期扫描将打到apk包中的所有类
//将 scanInterface的实现类 或 scanSuperClasses的子类
//并在 codeInsertToClassName 类的 codeInsertToMethodName 方法中生成如下代码：
/*
  codeInsertToClassName.registerMethodName(scanInterface)
 */
//要点：
//1. codeInsertToMethodName 若未指定，则默认为static块
//2. codeInsertToMethodName 与 registerMethodName 需要同为static或非static
//自动生成的代码示例：
/*
  在com.example.base_interface.ComponentManager.class文件中
  static
  {
    register(new ComponentAPP()); //scanInterface的实现类
    register(new ComponentA()); //scanSuperClass的子类
  }
 */

apply plugin: 'auto-register'
project.ext.registerInfoList = [
        [
                'scanInterface'          : 'com.example.base_interface.IComponent'
                // scanSuperClasses 会自动被加入到exclude中，下面的exclude只作为演示，其实可以不用手动添加
                , 'scanSuperClasses'     : ['com.example.autoregister_app.BaseComponent']
                //未指定codeInsertToMethodName，默认插入到static块中，故此处register必须为static方法
                , 'codeInsertToClassName': 'com.example.base_interface.ComponentManager'

                , 'registerMethodName'   : 'register'
                //排除的类，支持正则表达式（包分隔符需要用/表示，不能用.）//排除这个基类
                , 'exclude'              : ['com.example.autoregister_app.BaseComponent'.replaceAll('\\.', '/')]
        ],
        [
                'scanInterface'           : 'com.example.model_a.IOther'
                , 'codeInsertToClassName' : 'com.example.model_a.OtherManager'
                , 'codeInsertToMethodName': 'init' //非static方法
                , 'registerMethodName'    : 'registerOther' //非static方法
        ]
]
autoregister {
    registerInfo = registerInfoList
    cacheEnabled = true
}