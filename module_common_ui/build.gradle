if (rootProject.ext.module_common_ui.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //ARouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (rootProject.ext.module_common_ui.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发环境下自动排序所以debug下的java文件
                java {
                    exclude 'debug/**'
                }
            }
        }
    }

    resourcePrefix "common_ui"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':module_component_base')

    //路由
    annotationProcessor rootProject.ext.dependencies.arouter_compiler
    implementation rootProject.ext.dependencies.arouter_api

    implementation rootProject.ext.dependencies.recyclerview_v7
    implementation rootProject.ext.dependencies.pull_to_refresh
    implementation rootProject.ext.dependencies.gson

}
